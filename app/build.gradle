apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("keystore.properties")

def keystoreProperties = new Properties()

keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        config {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.agnihotri.planttester"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        testInstrumentationRunner "com.agnihotri.planttester.MockUtils.MockTestRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'


    }
//    configurations.all {
//        resolutionStrategy {
//            force 'org.hamcrest:hamcrest:2.2'
//        }
//    }
//    applicationVariants.all {
//        variant
//    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
        config {
            signingConfig signingConfigs.config
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR' // Test Orchestrators
    }
}



dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.json:json:20200518'
    testImplementation 'org.mockito:mockito-core:3.3.3'
//    testImplementation('org.mockito:mockito-core:3.3.3'){
//        exclude group: 'org.mockito.hamcrest'
//        exclude group: 'org.mockito.internal.hamcrest'
//    }
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.7.2'
    testImplementation 'org.hamcrest:hamcrest:2.2'
//    androidTestImplementation 'org.hamcrest:hamcrest:2.2'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:4.7.2'
    androidTestImplementation 'org.mockito:mockito-core:3.3.3'
//    androidTestImplementation('org.mockito:mockito-core:3.3.3'){
//        exclude group: 'org.mockito.hamcrest'
//        exclude group: 'org.mockito.internal.hamcrest'
//    }
//    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
//    androidTestImplementation exclude 'org.hamcrest:hamcrest-core:1.3'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'
    androidTestImplementation 'androidx.test.ext:truth:1.0.0'
    androidTestImplementation 'com.madgag.spongycastle:bctls-jdk15on:1.58.0.0'
    androidTestImplementation 'com.madgag.spongycastle:core:1.58.0.0'
    androidTestUtil 'androidx.test:orchestrator:1.3.0-rc01'



}

